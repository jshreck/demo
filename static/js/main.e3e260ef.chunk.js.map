{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["DEFAULT_COLOR_AND_SELECTED_OPTION","App","useState","color","setColor","selectedOption","setSelectedOption","getRandomColor","Math","floor","random","toString","className","style","height","width","backgroundColor","value","onChange","event","target","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"oMAGMA,EAAoC,SA8C3BC,EA5CH,WAAO,IAAD,EACUC,mBAASF,GADnB,mBACTG,EADS,KACFC,EADE,OAE4BF,mBAC1CF,GAHc,mBAETK,EAFS,KAEOC,EAFP,KAgBVC,EAAiB,WACrB,MAAO,IAAMC,KAAKC,MAAsB,SAAhBD,KAAKE,UAAqBC,SAAS,KAG7D,OACE,qBAAKC,UAAU,MAAf,SACE,yBAAQA,UAAU,aAAlB,UACE,uEACA,qBACEC,MAAO,CAAEC,OAAQ,QAASC,MAAO,QAASC,gBAAiBb,KAE7D,uBACA,yBAAQc,MAAOZ,EAAgBa,SAtBhB,SAACC,GACO,eAAvBA,EAAMC,OAAOH,OACfb,EAASG,KACTD,EAAkBa,EAAMC,OAAOH,SAE/Bb,EAASe,EAAMC,OAAOH,OACtBX,EAAkBa,EAAMC,OAAOH,SAgB7B,UACE,wBAAQA,MAAM,SAAd,oBACA,wBAAQA,MAAM,OAAd,kBACA,wBAAQA,MAAM,MAAd,iBACA,wBAAQA,MAAM,OAAd,kBACA,wBAAQA,MAAM,SAAd,oBACA,wBAAQA,MAAM,SAAd,oBACA,wBAAQA,MAAM,YAAd,uBACA,wBAAQA,MAAM,OAAd,kBACA,wBAAQA,MAAM,aAAd,kCC9BKI,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,K","file":"static/js/main.e3e260ef.chunk.js","sourcesContent":["import \"./App.css\";\nimport { useState } from \"react\";\n\nconst DEFAULT_COLOR_AND_SELECTED_OPTION = \"maroon\";\n\nconst App = () => {\n  const [color, setColor] = useState(DEFAULT_COLOR_AND_SELECTED_OPTION);\n  const [selectedOption, setSelectedOption] = useState(\n    DEFAULT_COLOR_AND_SELECTED_OPTION\n  );\n\n  const handleChange = (event) => {\n    if (event.target.value === \"surpriseMe\") {\n      setColor(getRandomColor());\n      setSelectedOption(event.target.value);\n    } else {\n      setColor(event.target.value);\n      setSelectedOption(event.target.value);\n    }\n  };\n\n  const getRandomColor = () => {\n    return \"#\" + Math.floor(Math.random() * 16777215).toString(16);\n  };\n\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <p>Select a color to change the box color</p>\n        <div\n          style={{ height: \"200px\", width: \"200px\", backgroundColor: color }}\n        />\n        <br />\n        <select value={selectedOption} onChange={handleChange}>\n          <option value=\"maroon\">Maroon</option>\n          <option value=\"pink\">Pink</option>\n          <option value=\"red\">Red</option>\n          <option value=\"blue\">Blue</option>\n          <option value=\"purple\">Purple</option>\n          <option value=\"orange\">Orange</option>\n          <option value=\"turquoise\">Turquoise</option>\n          <option value=\"gray\">Gray</option>\n          <option value=\"surpriseMe\">Surprise Me</option>\n        </select>\n      </header>\n    </div>\n  );\n};\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}